{"changed":true,"filter":false,"title":"codigo.js","tooltip":"/codigo.js","value":"//http://jafrancov.com/2011/12/trazar-rutas-gmaps-api-v3/  https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=es#get_place_information\n\n//Variables Globales\nvar directionsDisplay;\nvar directionsService;\nvar map = null;\n\n\n//----------FUNCIONES-----------------------------------------------------------\n\n//Funcion para inicializar el mapa, punto donde se carga, zoom, tipo de mapa\n// y servicios que carga. \n\nfunction inicio() {\n     directionsDisplay = new google.maps.DirectionsRenderer();\n    directionsService = new google.maps.DirectionsService();\n\n    var myLatlng = new google.maps.LatLng(37.178056, -3.600833);\n    var myOptions = {\n        zoom: 13,\n        center: myLatlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    var divMapa = document.getElementById('map_canvas')\n    map = new google.maps.Map(divMapa, myOptions);\n    directionsDisplay = new google.maps.DirectionsRenderer();\n    directionsService = new google.maps.DirectionsService();\n    \n    \n}\n\n\n//Obtiene las direcciones y calcula la ruta entre el punto de origen y destino.\n\n\nfunction getDirections() {\n    var origen = document.getElementById('origen').value;\n    var destino = document.getElementById('destino').value;\n    var modoViaje = document.getElementById('modo_viaje').value;\n    var tipoS ='metrico';\n      var panel = document.getElementById('panel_ruta');\n\n    if (!origen || !destino) {\n        alert(\"El origen y el destino son obligatorios\");\n        return;\n    }\n\n\n    var request = {\n        origin: origen,\n        destination: destino,\n\n        travelMode: google.maps.DirectionsTravelMode[modoViaje],\n        unitSystem: google.maps.DirectionsUnitSystem[tipoS],\n        provideRouteAlternatives: true\n    };\n  \n\n    directionsService.route(request, function (response, status) {\n        if (status == google.maps.DirectionsStatus.OK) {\n            directionsDisplay.setMap(map);\n            directionsDisplay.setPanel(panel);\n            directionsDisplay.setDirections(response);\n            \n        } else {\n            alert(\"No existen rutas entre ambos puntos\");\n        }\n    });\n\n}\n\n\n//---------PRUEBAS\n\n\nmap = new google.maps.Map(map_canvas, {\n    mapTypeId: 'IGN',\n    scaleControl: true,\n    streetViewControl: true,\n    panControl: true,\n    mapTypeControl: true,\n    overviewMapControl: true,\n    overviewMapControlOptions: {\n        opened: true,\n        position: google.maps.ControlPosition.BOTTOM_CENTER\n    },\n\n\n    mapTypeControlOptions: {\n        mapTypeIds: [\n      'IGN', 'IGNScanExpress',\n      google.maps.MapTypeId.SATELLITE, google.maps.MapTypeId.TERRAIN, google.maps.MapTypeId.HYBRID, google.maps.MapTypeId.ROADMAP\n    ],\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR\n    },\n    center: new google.maps.LatLng(47, 3),\n    zoom: 6,\n    draggableCursor: \"crosshair\"\n});\n\n// Create the search box and link it to the UI element.\n\n\n//No funciona esta parte en JQUERY\nvar input = document.getElementById(\"origen\");\nvar searchBox = new google.maps.places.SearchBox(input);\nmap.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n\nvar input2 = document.getElementById(\"destino\");\nvar searchBox2 = new google.maps.places.SearchBox(input2);\nmap.controls[google.maps.ControlPosition.TOP_LEFT].push(input2);\n\n\n// Bias the SearchBox results towards current map's viewport.\nmap.addListener('bounds_changed', function () {\n    searchBox.setBounds(map.getBounds());\n});\n\nvar markers = [];\n// Listen for the event fired when the user selects a prediction and retrieve\n// more details for that place.\nsearchBox.addListener('places_changed', predicciones, false);\nsearchBox2.addListener('places_changed', predicciones, false);\n\n\nfunction predicciones() {\n    var places = searchBox.getPlaces();\n\n    if (places.length == 0) {\n        return;\n    }\n\n    // Clear out the old markers.\n    markers.forEach(function (marker) {\n        marker.setMap(null);\n    });\n    markers = [];\n\n    // For each place, get the icon, name and location.\n    var bounds = new google.maps.LatLngBounds();\n    places.forEach(function (place) {\n        var icon = {\n            url: place.icon,\n            size: new google.maps.Size(71, 71),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(17, 34),\n            scaledSize: new google.maps.Size(25, 25)\n        };\n\n        /* Create a marker for each place.\n        markers.push(new google.maps.Marker({\n          map: map,\n          title: place.name,\n          animation: google.maps.Animation.BOUNCE,\n          position: place.geometry.location\n        }));*/\n\n        if (place.geometry.viewport) {\n            // Only geocodes have viewport.\n            bounds.union(place.geometry.viewport);\n        } else {\n            bounds.extend(place.geometry.location);\n        }\n    });\n    map.fitBounds(bounds);\n}\n\n\n\n//---------------MANEJADORES DE EVENTOS-----------------------------------------\nvar buscar = document.getElementById('buscar');\n//Evento controla boton buscar. JQUERY: .on() ==addEventListener();\nbuscar.addEventListener('click', function () {\n    getDirections();\n});\n\n\n\n\n//Evento controla selects de transporte y medida. \n//('.opciones_ruta').on('change', function() {\n//  getDirections();\n//});\n\n\n\n\n//--------------INICIO----------------------------------------------------------\n//Funcion inicio\nwindow.onload = inicio();\n","undoManager":{"mark":-2,"position":15,"stack":[[{"start":{"row":26,"column":60},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":27,"column":4},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"insert","lines":["v"],"id":4}],[{"start":{"row":28,"column":5},"end":{"row":28,"column":6},"action":"insert","lines":["a"],"id":5}],[{"start":{"row":28,"column":6},"end":{"row":28,"column":7},"action":"insert","lines":["r"],"id":6}],[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":28,"column":8},"end":{"row":28,"column":9},"action":"insert","lines":["#"],"id":8}],[{"start":{"row":28,"column":9},"end":{"row":28,"column":10},"action":"insert","lines":["e"],"id":9}],[{"start":{"row":28,"column":10},"end":{"row":28,"column":11},"action":"insert","lines":["n"],"id":10}],[{"start":{"row":28,"column":11},"end":{"row":28,"column":12},"action":"insert","lines":["t"],"id":11}],[{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"insert","lines":["r"],"id":12}],[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["a"],"id":13}],[{"start":{"row":28,"column":14},"end":{"row":28,"column":15},"action":"insert","lines":["r"],"id":14}],[{"start":{"row":28,"column":15},"end":{"row":28,"column":16},"action":"insert","lines":["{"],"id":15}],[{"start":{"row":28,"column":16},"end":{"row":28,"column":17},"action":"insert","lines":["}"],"id":16}],[{"start":{"row":28,"column":4},"end":{"row":28,"column":17},"action":"remove","lines":["var #entrar{}"],"id":17}]]},"ace":{"folds":[],"scrolltop":146.66667055200656,"scrollleft":0,"selection":{"start":{"row":29,"column":1},"end":{"row":29,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1462703609000}